CREATE TABLE PRODUCTS(
	PRODUCT_ID			SERIAL			PRIMARY KEY,
	PRODUCT_NAME		VARCHAR(50)		NOT NULL,
	PRODUCT_QTY			INT				NOT NULL,
	PROD_CATEGORY		VARCHAR(25)		NOT NULL
);

-- INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, PRODUCT_QTY, PROD_CATEGORY, PRODUCT_PRICE)
-- VALUES(DEFAULT, 'INTEL i9', 100, 'CPU', 14000);

-- ALTER TABLE PRODUCTS
-- ADD COLUMN PRODUCT_PRICE NUMERIC(9,2) NOT NULL;
CREATE TABLE RECEIPT(
	RECEIPT_ID			SERIAL			PRIMARY KEY,
	RECEIPT_CUS_NAME	VARCHAR(50)		NOT NULL,
	RECEIPT_TOTAL		NUMERIC(9,2)	NOT NULL,
	RECEIPT_DATE		DATE			DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ORDER_ITEM(
	ORDER_ITEM_ID		SERIAL			PRIMARY KEY,
	ORDER_QTY			INT				NOT NULL,
	ORDER_PRICE			NUMERIC(9,2)	NOT NULL,
	RECEIPT_ID			INT				NOT NULL,
	PRODUCT_ID			INT				NOT NULL,
	FOREIGN KEY			(RECEIPT_ID)	REFERENCES	RECEIPT,
	FOREIGN KEY			(PRODUCT_ID)	REFERENCES	PRODUCTS
);

-- INSERT INTO RECEIPT(RECEIPT_ID, RECEIPT_CUS_NAME, RECEIPT_TOTAL, RECEIPT_DATE)
-- VALUES(DEFAULT, 'PATRICK', '28000', DEFAULT);
-- INSERT INTO ORDER_ITEM(ORDER_ITEM_ID, ORDER_QTY, ORDER_PRICE, RECEIPT_ID, PRODUCT_ID)
-- VALUES(DEFAULT, 2, 14000, 1,1);

CREATE TABLE EMPLOYEE(
	EMPLOYEE_ID				SERIAL			PRIMARY KEY,
	EMPLOYEE_LNAME			VARCHAR(25)		NOT NULL,
	EMPLOYEE_FNAME			VARCHAR(25)		NOT NULL,
	EMPLOYEE_ADDRESS		VARCHAR(100)	NOT NULL,
	EMPLOYEE_CONT_NO		VARCHAR(11)		NOT NULL,
	EMPLOYEE_DATE_HIRED		DATE			DEFAULT CURRENT_TIMESTAMP
);

-- INSERT INTO EMPLOYEE(EMPLOYEE_ID, EMPLOYEE_LNAME, EMPLOYEE_FNAME, EMPLOYEE_ADDRESS, EMPLOYEE_CONT_NO, EMPLOYEE_DATE_HIRED)
-- VALUES(DEFAULT, 'CN', 'EDD', 'CEBU', '12345678901', DEFAULT);

CREATE TABLE SERVICE(
	SERVICE_ID				SERIAL			PRIMARY KEY,
	SERVICE_CUS_NAME		VARCHAR(25)		NOT NULL,
	SERVICE_DEVICE			VARCHAR(25)		NOT NULL,
	SERVICE_TYPE			VARCHAR(50)		NOT NULL,
	SERVICE_CHARGE			NUMERIC(9,2)	NOT NULL,
	EMPLOYEE_ID				INT				NOT NULL,
	SERVICE_DATE			DATE			DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY 			(EMPLOYEE_ID)	REFERENCES EMPLOYEE
);

-- INSERT INTO SERVICE(SERVICE_ID,SERVICE_CUS_NAME, SERVICE_DEVICE, SERVICE_TYPE, SERVICE_CHARGE, EMPLOYEE_ID, SERVICE_DATE)
-- VALUES(DEFAULT, 'EDDY', 'PC', 'CLEANING', 400, 1, DEFAULT);

CREATE TABLE HISTORY(
	HISTORY_ID				SERIAL			PRIMARY KEY,
	RECEIPT_ID				INT,
	SERVICE_ID				INT,
	FOREIGN KEY				(RECEIPT_ID)	REFERENCES RECEIPT,
	FOREIGN KEY				(SERVICE_ID)	REFERENCES SERVICE
);

-- INSERT INTO HISTORY(HISTORY_ID, RECEIPT_ID)
-- VALUES(DEFAULT, 1);

-- INSERT INTO HISTORY(HISTORY_ID, SERVICE_ID)
-- VALUES(DEFAULT, 3);

CREATE OR REPLACE FUNCTION FNC_INSERT_HISTORY_SERVICE()
RETURNS TRIGGER AS
$$
BEGIN
	INSERT INTO HISTORY(HISTORY_ID, SERVICE_ID)
	VALUES(DEFAULT, NEW.SERVICE_ID);
RETURN NEW;
END
$$ LANGUAGE PLPGSQL;

-- CREATE OR REPLACE TRIGGER TRG_INSERT_HISTORY_SERVICE
-- AFTER INSERT ON SERVICE
-- FOR EACH ROW 
-- EXECUTE FUNCTION FNC_INSERT_HISTORY_SERVICE();

-- CREATE OR REPLACE FUNCTION FNC_INSERT_HISTORY_RECEIPT()
-- RETURNS TRIGGER AS
-- $$
-- BEGIN
-- 	INSERT INTO HISTORY(HISTORY_ID, RECEIPT_ID)
-- 	VALUES(DEFAULT, NEW.RECEIPT_ID);
-- END
-- $$ LANGUAGE PLPGSQL;

-- CREATE OR REPLACE TRIGGER TRG_INSERT_HISTORY_SERVICE
-- AFTER INSERT ON RECEIPT
-- FOR EACH ROW 
-- EXECUTE FUNCTION FNC_INSERT_HISTORY_RECEIPT();

SELECT * FROM EMPLOYEE;
SELECT * FROM SERVICE;
SELECT * FROM HISTORY;

INSERT INTO EMPLOYEE(EMPLOYEE_ID, EMPLOYEE_LNAME, EMPLOYEE_FNAME, EMPLOYEE_ADDRESS, EMPLOYEE_CONT_NO, EMPLOYEE_DATE_HIRED)
VALUES(DEFAULT, 'BEAN', 'MR.', 'UK', '12345678901', DEFAULT);

INSERT INTO SERVICE(SERVICE_ID, SERVICE_CUS_NAME, SERVICE_DEVICE, SERVICE_TYPE, SERVICE_CHARGE, EMPLOYEE_ID, SERVICE_DATE)
VALUES(DEFAULT, 'CN EDDY', 'LAPTOP', 'CLEANING', 500, 3, DEFAULT);

